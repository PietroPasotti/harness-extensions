'''This is a library providing a utility for adding networking mocking
capability to Harness.

Basic usage:

>>> from charms.harness_extensions.v0 import networking
>>> networking.activate()

Advanced use cases:

# let's pretend 'foo' is a relation:
>>> foo = charm.model.get_relation('foo', 1)
>>> with networking(networks={foo: Network(private_address="42.42.42.42")}):
>>>     # the juju-info network is present by default unless you pass None
>>>     assert c.model.get_binding("juju-info").network.bind_address == IPv4Address("1.1.1.1")
>>>     # the custom foo endpoint is mocked:
>>>     assert c.model.get_binding(foo).network.bind_address == IPv4Address("42.42.42.42")
>>>     assert c.model.get_binding('foo').network.bind_address == IPv4Address("42.42.42.42")


CAVEAT: The patch is global; that is, if you instantiate two Harnesses (don't do that),
you won't be able to mock `network-get` calls on a per-harness basis.
'''

# The unique Charmhub library identifier, never change it
LIBID = "aeb24262a5db4716925bf012ceae211c"

# Increment this major API version when introducing breaking changes
LIBAPI = {{ version }}

# Increment this PATCH version before using `charmcraft publish-lib` or reset
# to 0 if you are raising the major API version
LIBPATCH = {{ revision }}

{{ py }}

